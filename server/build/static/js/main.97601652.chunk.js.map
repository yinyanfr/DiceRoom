{"version":3,"sources":["logo.svg","Res.js","App.js","AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Res","state","drop","onDrop","e","preventDefault","_this","setState","prev","render","react_default","a","createElement","className","props","children","total","aria-haspopup","aria-controls","onClick","aria-hidden","id","role","res","map","i","key","Component","App","msg","dices","socket","componentDidMount","io","on","console","log","concat","onMsg","target","value","onSubmit","emit","type","placeholder","onChange","class","reverse","src_Res","JSON","parse","Main","src_App_0","AppRouter","BrowserRouter","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97601652.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nclass Res extends Component{\r\n\r\n    state = {\r\n        drop: false\r\n    }\r\n\r\n    onDrop = e => {\r\n        e.preventDefault()\r\n        this.setState(prev => ({\r\n            drop: !prev.drop\r\n        }))\r\n    }\r\n\r\n\r\n    render = () => (\r\n\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <nav className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <div className=\"level-item\">\r\n                                    {this.props.children.total}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"level-right\">\r\n                                <div className=\"level-item\">\r\n                                <div className={\r\n                                    this.state.drop\r\n                                    ? \"dropdown is-active\"\r\n                                    : \"dropdown\"\r\n                                }>\r\n                                <div className=\"dropdown-trigger\">\r\n                                  <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu\" onClick={this.onDrop}>\r\n                                    <span>Detail</span>\r\n                                    <span className=\"icon is-small\">\r\n                                      <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                  </button>\r\n                                </div>\r\n                                <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\r\n                                  <div className=\"dropdown-content\">\r\n                                    {\r\n                                        this.props.children.res.map((e, i) => (\r\n                                            <span key={i} className=\"dropdown-item\">\r\n                                                {e}\r\n                                            </span>\r\n                                        ))\r\n                                    }\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Res\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport io from \"socket.io-client\"\nimport Res from \"./Res\"\n\nclass App extends Component {\n\n  state = {\n    msg: \"\",\n    dices: [],\n    socket: null\n  }\n\n  componentDidMount = e => {\n    const socket = io(this.props.io)\n    this.setState(() => ({socket}))\n    socket.on(\"res\", msg => {\n      console.log(msg)\n      this.setState(prev => ({\n        dices: prev.dices.concat(msg)\n      }))\n    })\n  }\n\n  onMsg = e => {\n    let msg = e.target.value\n    this.setState(() => ({msg}))\n  }\n\n  onSubmit = e => {\n    this.state.socket.emit(\"dice\", this.state.msg)\n  }\n  \n  render = () => {\n\n    return (\n      <div className=\"main\">\n      <div className=\"field\">\n      <div className=\"control has-icons-left\">\n        <input \n          className=\"input\"\n          type=\"text\"\n          placeholder=\"xdy\"\n          value={this.state.msg}\n          onChange={this.onMsg}\n        />\n        <span className=\"icon is-small is-left\">\n          <i class=\"fas fa-dice-two\"></i>\n        </span>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n        <button \n        className=\"button is-link is-right\"\n        onClick={this.onSubmit}\n        >submit</button>\n        </div>\n      </div>\n      <p>Type in a path to enter a room, all players in the same room well share the same results.</p>\n      <p>Example: http://web_address/12345 for room 12345</p>\n\n        <div>\n          {\n            this.state.dices.reverse().map((e, i) => (\n              <Res key={i}>{JSON.parse(e)}</Res>\n            ))\n          }\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\"\r\nimport App from \"./App\"\r\n\r\nconst Main = () => <App io=\"http://localhost:2019\" />\r\n\r\nconst AppRouter = () => (\r\n\r\n    <Router>\r\n        <div>\r\n            <Route path=\"/\" component={Main} />\r\n        </div>\r\n    </Router>\r\n)\r\n\r\nexport default AppRouter\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.css\"\nimport \"bulma/bulma.sass\"\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}